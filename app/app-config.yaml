app:
  title: DevXP IDP 
  baseUrl: https://backstage.diegoluisi.eti.br

  support:
    url: https://github.com/backstage/backstage/issues # Used by common ErrorPage
    items: # Used by common SupportButton component
      - title: Issues
        icon: github
        links:
          - url: https://github.com/diegoluisi/backstage/issues
            title: GitHub Issues
      - title: Slack Chatroom
        icon: chat
        links:
          - url: https://devxp.slack.com/archives/C0336UVR2NP
            title: '#devxp-team'

organization:
  name: DevXP Labs

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/tutorials/backend-to-backend-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: https://backstage.diegoluisi.eti.br
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, POST, PUT, DELETE]
    credentials: true
  database:
    #client: better-sqlite3
    #connection: ':memory:'    
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
    # Refer to Tarn docs for default values on PostgreSQL pool configuration - https://github.com/Vincit/tarn.js
    knexConfig:
      pool:
        min: 3
        max: 12
        acquireTimeoutMillis: 60000
        idleTimeoutMillis: 60000      
  cache:
    store: memory
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir


integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN}
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

#proxy:
#  '/argocd/api':
#    target: https://argocd.diegoluisi.eti.br/api/v1/
#    changeOrigin: true
#    # only if your argocd api has self-signed cert
#    secure: false
#    headers:
#      Cookie:
#        $env: ARGOCD_AUTH_TOKEN

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  environment: development
  providers:
    github:
      development:
        clientId: ${AUTH_GITHUB_CLIENT_ID}
        clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options
  defaultAuthor:
    name: devxp-bot # Defaults to `Scaffolder`
    email: contato@diegoluisi.eti.br # Defaults to `scaffolder@backstage.io`
  defaultCommitMessage: "ðŸ¤– U can't touch this âš¡" # Defaults to 'Initial commit'


catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    # Backstage example components
    - type: url
      target: https://github.com/diegoluisi/backstage/blob/main/catalog/devxp/components.yaml

    # Backstage example systems
    - type: url
      target: https://github.com/diegoluisi/backstage/blob/main/catalog/devxp/systems.yaml

    # Backstage example APIs
    - type: url
      target: https://github.com/diegoluisi/backstage/blob/main/catalog/devxp/apis.yaml

    # Backstage example resources
    - type: url
      target: https://github.com/diegoluisi/backstage/blob/main/catalog/devxp/resources.yaml

    # Backstage example organization groups
    - type: url
      target: https://github.com/diegoluisi/backstage/blob/main/catalog/devxp/groups.yaml
      rules:
        - allow: [Group, User]
    # Backstage example organization template
    - type: url
      target: https://github.com/diegoluisi/backstage/blob/main/catalog/devxp/templates.yaml
      rules:
        - allow: [Template]